(() => {
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __commonJS = (cb, mod) => function __require() {
    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };

  // <stdin>
  var require_stdin = __commonJS({
    "<stdin>"(exports, module) {
      !function(t, e) {
        "object" == typeof exports && "object" == typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define([], e) : "object" == typeof exports ? exports.POWERMODE = e() : t.POWERMODE = e();
      }(exports, function() {
        return function(t) {
          function e(n) {
            if (o[n]) return o[n].exports;
            var r = o[n] = { exports: {}, id: n, loaded: false };
            return t[n].call(r.exports, r, r.exports, e), r.loaded = true, r.exports;
          }
          var o = {};
          return e.m = t, e.c = o, e.p = "", e(0);
        }([function(t, e, o) {
          "use strict";
          function n(t2, e2) {
            return Math.random() * (e2 - t2) + t2;
          }
          function r(t2) {
            if (d.colorful) {
              var e2 = n(0, 360);
              return "hsla(" + n(e2 - 10, e2 + 10) + ", 100%, " + n(50, 80) + "%, 1)";
            }
            return window.getComputedStyle(t2).color;
          }
          function i() {
            var t2, e2 = document.activeElement;
            if ("TEXTAREA" === e2.tagName || "INPUT" === e2.tagName && "text" === e2.getAttribute("type")) {
              var n2 = o(1)(e2, e2.selectionStart);
              return t2 = e2.getBoundingClientRect(), { x: n2.left + t2.left, y: n2.top + t2.top, color: r(e2) };
            }
            var i2 = window.getSelection();
            if (i2.rangeCount) {
              var a2 = i2.getRangeAt(0), d2 = a2.startContainer;
              return d2.nodeType === document.TEXT_NODE && (d2 = d2.parentNode), t2 = a2.getBoundingClientRect(), { x: t2.left, y: t2.top, color: r(d2) };
            }
            return { x: 0, y: 0, color: "transparent" };
          }
          function a(t2, e2, o2) {
            return { x: t2, y: e2, alpha: 1, color: o2, velocity: { x: -1 + 2 * Math.random(), y: -3.5 + 2 * Math.random() } };
          }
          function d() {
            for (var t2 = i(), e2 = 5 + Math.round(10 * Math.random()); e2--; ) p[f] = a(t2.x, t2.y, t2.color), f = (f + 1) % 500;
            if (d.shake) {
              var o2 = 1 + 2 * Math.random(), n2 = o2 * (Math.random() > 0.5 ? -1 : 1), r2 = o2 * (Math.random() > 0.5 ? -1 : 1);
              document.body.style.marginLeft = n2 + "px", document.body.style.marginTop = r2 + "px", setTimeout(function() {
                document.body.style.marginLeft = "", document.body.style.marginTop = "";
              }, 75);
            }
          }
          function l() {
            requestAnimationFrame(l), u.clearRect(0, 0, c.width, c.height);
            for (var t2 = 0; t2 < p.length; ++t2) {
              var e2 = p[t2];
              e2.alpha <= 0.1 || (e2.velocity.y += 0.075, e2.x += e2.velocity.x, e2.y += e2.velocity.y, e2.alpha *= 0.96, u.globalAlpha = e2.alpha, u.fillStyle = e2.color, u.fillRect(Math.round(e2.x - 1.5), Math.round(e2.y - 1.5), 3, 3));
            }
          }
          var c = document.createElement("canvas");
          c.width = window.innerWidth, c.height = window.innerHeight, c.style.cssText = "position:fixed;top:0;left:0;pointer-events:none;z-index:999999", window.addEventListener("resize", function() {
            c.width = window.innerWidth, c.height = window.innerHeight;
          }), document.body.appendChild(c);
          var u = c.getContext("2d"), p = [], f = 0;
          d.shake = true, d.colorful = false, requestAnimationFrame(l), t.exports = d;
        }, function(t, e) {
          !function() {
            function e2(t2, e3, r) {
              var i = r && r.debug || false;
              if (i) {
                var a = document.querySelector("#input-textarea-caret-position-mirror-div");
                a && a.parentNode.removeChild(a);
              }
              var d = document.createElement("div");
              d.id = "input-textarea-caret-position-mirror-div", document.body.appendChild(d);
              var l = d.style, c = window.getComputedStyle ? getComputedStyle(t2) : t2.currentStyle;
              l.whiteSpace = "pre-wrap", "INPUT" !== t2.nodeName && (l.wordWrap = "break-word"), l.position = "absolute", i || (l.visibility = "hidden"), o.forEach(function(t3) {
                l[t3] = c[t3];
              }), n ? t2.scrollHeight > parseInt(c.height) && (l.overflowY = "scroll") : l.overflow = "hidden", d.textContent = t2.value.substring(0, e3), "INPUT" === t2.nodeName && (d.textContent = d.textContent.replace(/\s/g, "\u807D"));
              var u = document.createElement("span");
              u.textContent = t2.value.substring(e3) || ".", d.appendChild(u);
              var p = { top: u.offsetTop + parseInt(c.borderTopWidth), left: u.offsetLeft + parseInt(c.borderLeftWidth) };
              return i ? u.style.backgroundColor = "#aaa" : document.body.removeChild(d), p;
            }
            var o = ["direction", "boxSizing", "width", "height", "overflowX", "overflowY", "borderTopWidth", "borderRightWidth", "borderBottomWidth", "borderLeftWidth", "borderStyle", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "fontStyle", "fontVariant", "fontWeight", "fontStretch", "fontSize", "fontSizeAdjust", "lineHeight", "fontFamily", "textAlign", "textTransform", "textIndent", "textDecoration", "letterSpacing", "wordSpacing", "tabSize", "MozTabSize"], n = null != window.mozInnerScreenX;
            "undefined" != typeof t && "undefined" != typeof t.exports ? t.exports = e2 : window.getCaretCoordinates = e2;
          }();
        }]);
      }), function() {
        POWERMODE.colorful = true, POWERMODE.shake = false, document.body.addEventListener("input", POWERMODE);
      }();
    }
  });
  require_stdin();
})();
//# sourceMappingURL=data:application/json;base64,
